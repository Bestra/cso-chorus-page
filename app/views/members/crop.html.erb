<% content_for(:head) do %>
<script type="text/javascript" charset="utf-8">

var originalHeight = <%= @member.photo_geometry(:original).height %>;
var originalWidth = <%= @member.photo_geometry(:original).width %>;

function jCropScale() {
  if (!window.jCropScaleFactor) {
    window.jCropScaleFactor = $('.jcrop-holder').height() / originalHeight;
  }

  return window.jCropScaleFactor;
}

function cropUpdated(windowCoords) {
  // in some cases the size of the cropper itself will be smaller than the actual
  // image.  if the image is 1000 x 2000 the cropper might only 500 x 1000, and we need
  // to scale the crop coordinates up appropriately

  var scale = jCropScale();
  var imageCoords = {
    x: windowCoords.x * scale,
    y: windowCoords.y * scale,
    h: windowCoords.h * scale,
    w: windowCoords.w * scale
  };

  setFormValues(imageCoords);
  updatePreview(imageCoords);

}

function setFormValues(coords) {
  $("#crop_x").val(coords.x);
  $("#crop_y").val(coords.y);
  $("#crop_w").val(coords.w);
  $("#crop_h").val(coords.h);
}

function updatePreview(coords) {
  var rx = 95/coords.w;
  var ry = 120/coords.h;
  $('#preview').css({
    width: Math.round(rx * originalWidth) + 'px',
    height: Math.round(ry * originalHeight) + 'px',
    marginLeft: '-' + Math.round(rx * coords.x) + 'px',
    marginTop: '-' + Math.round(ry * coords.y) + 'px'
  });

}

$(function() {
  $('#cropbox').Jcrop({
    onChange: cropUpdated,
    onSelect: cropUpdated,
    setSelect: [0, 0, 500, 500],
    aspectRatio: 95 / 120
  });
});

</script>
<% end %>

<%= image_tag @member.photo.url(:original), :id => "cropbox", :class => "jcrop" %>

<%= form_for @member do |f| %>
  <% for attribute in [:crop_x, :crop_y, :crop_w, :crop_h] %>
    <%= f.text_field attribute, :id => attribute %>
  <% end %>
  <p><%= f.submit "Crop" %></p>
<% end %>
<h4>Preview:</h4>
<div style="width:95px; height:120px; overflow:hidden">
  <%= image_tag @member.photo.url(:original), :id => "preview" %>
</div>

